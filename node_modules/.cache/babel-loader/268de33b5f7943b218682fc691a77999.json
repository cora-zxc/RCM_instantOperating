{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { isArray } from '@antv/util';\nimport { normalPadding } from '../../utils/padding';\nimport { treemap } from '../../utils/hierarchy/treemap';\nimport { deepAssign } from '../../utils';\nexport function findInteraction(interactions, interactionType) {\n  if (!isArray(interactions)) return undefined;\n  return interactions.find(function (i) {\n    return i.type === interactionType;\n  });\n}\nexport function enableInteraction(interactions, interactionType) {\n  var interaction = findInteraction(interactions, interactionType);\n  return interaction && interaction.enable !== false;\n}\nexport function resetDrillDown(chart) {\n  var drillDownInteraction = chart.interactions['treemap-drill-down'];\n  if (!drillDownInteraction) return; // @ts-ignore\n\n  var drillDownAction = drillDownInteraction.context.actions.find(function (i) {\n    return i.name === 'treemap-drill-down-action';\n  });\n  drillDownAction.reset();\n}\nexport function getFommatInteractions(interactions, hierarchyConfig) {\n  var drillDownInteraction = findInteraction(interactions, 'treemap-drill-down');\n\n  if (drillDownInteraction) {\n    return interactions.map(function (i) {\n      if (i.type === 'treemap-drill-down') {\n        return deepAssign({}, i, {\n          cfg: {\n            hierarchyConfig: hierarchyConfig\n          }\n        });\n      }\n\n      return i;\n    });\n  }\n\n  return interactions;\n}\nexport function transformData(options) {\n  var data = options.data,\n      colorField = options.colorField,\n      enableDrillDown = options.enableDrillDown,\n      hierarchyConfig = options.hierarchyConfig;\n  var nodes = treemap(data, __assign(__assign({}, hierarchyConfig), {\n    // @ts-ignore\n    type: 'hierarchy.treemap',\n    field: 'value',\n    as: ['x', 'y']\n  }));\n  var result = [];\n  nodes.forEach(function (node) {\n    if (node.depth === 0) {\n      return null;\n    } // 开启下钻，仅加载 depth === 1 的数据\n\n\n    if (enableDrillDown && node.depth !== 1) {\n      return null;\n    } // 不开启下钻，加载所有叶子节点\n\n\n    if (!enableDrillDown && node.children) {\n      return null;\n    } // path 信息仅挑选必要祖先元素属性，因为在有些属性是不必要(x, y), 或是不准确的(下钻时的 depth)，不对外透出\n\n\n    var curPath = node.ancestors().map(function (n) {\n      return {\n        data: n.data,\n        height: n.height,\n        value: n.value\n      };\n    }); // 在下钻树图中，每次绘制的是当前层级信息，将父元素的层级信息（data.path) 做一层拼接。\n\n    var path = enableDrillDown && isArray(data.path) ? curPath.concat(data.path.slice(1)) : curPath;\n    var eachNode = Object.assign({}, node.data, {\n      x: node.x,\n      y: node.y,\n      depth: node.depth,\n      value: node.value,\n      path: path\n    });\n\n    if (!node.data[colorField] && node.parent) {\n      var ancestorNode = node.ancestors().find(function (n) {\n        return n.data[colorField];\n      });\n      eachNode[colorField] = ancestorNode === null || ancestorNode === void 0 ? void 0 : ancestorNode.data[colorField];\n    } else {\n      eachNode[colorField] = node.data[colorField];\n    }\n\n    result.push(eachNode);\n  });\n  return result;\n}\nexport function getAdjustAppendPadding(padding) {\n  var currentAppendPadding = normalPadding(padding);\n  var BOTTOM = 25;\n  return [currentAppendPadding[0], currentAppendPadding[1], currentAppendPadding[2] + BOTTOM, currentAppendPadding[3]];\n}","map":{"version":3,"sources":["../../../src/plots/treemap/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from '@antv/util';\nimport { Types, View } from '@antv/g2';\nimport { normalPadding } from '../../utils/padding';\nimport { Interaction } from '../../types/interaction';\nimport { treemap } from '../../utils/hierarchy/treemap';\nimport { deepAssign } from '../../utils';\nimport { TreemapOptions } from './types';\n\nexport function findInteraction(\n  interactions: TreemapOptions['interactions'],\n  interactionType: string\n): undefined | Interaction {\n  if (!isArray(interactions)) return undefined;\n  return interactions.find((i) => i.type === interactionType);\n}\n\nexport function enableInteraction(interactions: TreemapOptions['interactions'], interactionType: string): boolean {\n  const interaction = findInteraction(interactions, interactionType);\n  return interaction && interaction.enable !== false;\n}\n\nexport function resetDrillDown(chart: View) {\n  const drillDownInteraction = chart.interactions['treemap-drill-down'];\n\n  if (!drillDownInteraction) return;\n\n  // @ts-ignore\n  const drillDownAction = drillDownInteraction.context.actions.find((i) => i.name === 'treemap-drill-down-action');\n\n  drillDownAction.reset();\n}\n\nexport function getFommatInteractions(\n  interactions: TreemapOptions['interactions'],\n  hierarchyConfig: TreemapOptions['hierarchyConfig']\n): TreemapOptions['interactions'] {\n  const drillDownInteraction = findInteraction(interactions, 'treemap-drill-down');\n  if (drillDownInteraction) {\n    return interactions.map((i) => {\n      if (i.type === 'treemap-drill-down') {\n        return deepAssign({}, i, {\n          cfg: {\n            hierarchyConfig,\n          },\n        });\n      }\n      return i;\n    });\n  }\n  return interactions;\n}\n\ninterface TransformDataOptions {\n  data: TreemapOptions['data'];\n  colorField: TreemapOptions['colorField'];\n  enableDrillDown: boolean;\n  hierarchyConfig: TreemapOptions['hierarchyConfig'];\n}\n\nexport function transformData(options: TransformDataOptions) {\n  const { data, colorField, enableDrillDown, hierarchyConfig } = options;\n\n  const nodes = treemap(data, {\n    ...hierarchyConfig,\n    // @ts-ignore\n    type: 'hierarchy.treemap',\n    field: 'value',\n    as: ['x', 'y'],\n  });\n\n  const result = [];\n  nodes.forEach((node) => {\n    if (node.depth === 0) {\n      return null;\n    }\n\n    // 开启下钻，仅加载 depth === 1 的数据\n    if (enableDrillDown && node.depth !== 1) {\n      return null;\n    }\n\n    // 不开启下钻，加载所有叶子节点\n    if (!enableDrillDown && node.children) {\n      return null;\n    }\n\n    // path 信息仅挑选必要祖先元素属性，因为在有些属性是不必要(x, y), 或是不准确的(下钻时的 depth)，不对外透出\n    const curPath = node.ancestors().map((n) => ({\n      data: n.data,\n      height: n.height,\n      value: n.value,\n    }));\n    // 在下钻树图中，每次绘制的是当前层级信息，将父元素的层级信息（data.path) 做一层拼接。\n    const path = enableDrillDown && isArray(data.path) ? curPath.concat(data.path.slice(1)) : curPath;\n\n    const eachNode = Object.assign({}, node.data, {\n      x: node.x,\n      y: node.y,\n      depth: node.depth,\n      value: node.value,\n      path,\n    });\n    if (!node.data[colorField] && node.parent) {\n      const ancestorNode = node.ancestors().find((n) => n.data[colorField]);\n      eachNode[colorField] = ancestorNode?.data[colorField];\n    } else {\n      eachNode[colorField] = node.data[colorField];\n    }\n\n    result.push(eachNode);\n  });\n  return result;\n}\n\nexport function getAdjustAppendPadding(padding: Types.ViewAppendPadding) {\n  const currentAppendPadding = normalPadding(padding);\n  const BOTTOM = 25;\n  return [currentAppendPadding[0], currentAppendPadding[1], currentAppendPadding[2] + BOTTOM, currentAppendPadding[3]];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}