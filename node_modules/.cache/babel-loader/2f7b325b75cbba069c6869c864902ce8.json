{"ast":null,"code":"import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../util/createLoading';\nimport { ErrorBoundary } from '../base';\nimport useGraph from '../hooks/useGraph';\nimport { defaultNodeSize, defaultLabelCfg, defaultNodeAnchorPoints, defaultStateStyles, defaultEdgeStyle } from './contants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents } from './utils';\nvar defaultNodeStyle = {\n  stroke: '#40a9ff'\n};\nvar defaultLayout = {\n  type: 'dagre',\n  rankdir: 'TB',\n  nodesepFunc: function () {\n    return 0;\n  },\n  ranksepFunc: function () {\n    return 0;\n  },\n  controlPoints: true\n};\nvar graphs = {};\n\nvar DagreGraph = function (props) {\n  var data = props.data,\n      className = props.className,\n      style = props.style,\n      width = props.width,\n      height = props.height,\n      _a = props.nodeType,\n      nodeType = _a === void 0 ? 'modelRect' : _a,\n      _b = props.edgeType,\n      edgeType = _b === void 0 ? 'polyline' : _b,\n      _c = props.behaviors,\n      behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c,\n      _d = props.nodeSize,\n      nodeSize = _d === void 0 ? defaultNodeSize : _d,\n      _e = props.nodeLabelCfg,\n      nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e,\n      _f = props.edgeLabelCfg,\n      edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f,\n      _g = props.nodeAnchorPoints,\n      nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g,\n      _h = props.layout,\n      layout = _h === void 0 ? defaultLayout : _h,\n      minimapCfg = props.minimapCfg,\n      _j = props.nodeStyle,\n      nodeStyle = _j === void 0 ? defaultNodeStyle : _j,\n      _k = props.edgeStyle,\n      edgeStyle = _k === void 0 ? defaultEdgeStyle : _k,\n      _l = props.nodeStateStyles,\n      nodeStateStyles = _l === void 0 ? defaultStateStyles : _l,\n      _m = props.edgeStateStyles,\n      edgeStateStyles = _m === void 0 ? defaultStateStyles : _m,\n      graphRef = props.graphRef,\n      onReady = props.onReady,\n      loading = props.loading,\n      loadingTemplate = props.loadingTemplate,\n      errorTemplate = props.errorTemplate;\n  var container = React.useRef(null);\n  var graph = React.useRef(null);\n  var graphId = getGraphId(graph);\n  useGraph(graphs[graphId], props, container);\n  useEffect(function () {\n    var graphSize = getGraphSize(width, height, container);\n    var graph = graphs[graphId];\n\n    if (!graph) {\n      graph = new G6.Graph({\n        container: container.current,\n        width: graphSize[0],\n        height: graphSize[1],\n        modes: {\n          default: behaviors\n        },\n        defaultNode: {\n          type: nodeType,\n          size: nodeSize,\n          style: nodeStyle,\n          anchorPoints: nodeAnchorPoints,\n          labelCfg: nodeLabelCfg\n        },\n        defaultEdge: {\n          type: edgeType,\n          style: edgeStyle,\n          labelCfg: edgeLabelCfg\n        },\n        nodeStateStyles: nodeStateStyles,\n        edgeStateStyles: edgeStateStyles,\n        layout: layout,\n        fitView: true\n      });\n      graphs[graphId] = graph;\n    }\n\n    if (graphRef) {\n      graphRef.current = graph;\n    }\n\n    processMinimap(minimapCfg, graph);\n    renderGraph(graph, data);\n\n    if (onReady) {\n      onReady(graph);\n    }\n\n    bindEvents(graph, props);\n    return function () {\n      if (graphs[graphId]) {\n        graphs[graphId].destroy();\n        delete graphs[graphId];\n      }\n    };\n  }, []);\n  return React.createElement(ErrorBoundary, {\n    errorTemplate: errorTemplate\n  }, loading && React.createElement(ChartLoading, {\n    loadingTemplate: loadingTemplate\n  }), React.createElement(\"div\", {\n    className: className,\n    style: style,\n    ref: container\n  }));\n};\n\nexport default DagreGraph;","map":{"version":3,"sources":["/Users/tim/Documents/RCM_instantOperating/node_modules/@ant-design/charts/es/graph/dagre.js"],"names":["React","useEffect","G6","ChartLoading","ErrorBoundary","useGraph","defaultNodeSize","defaultLabelCfg","defaultNodeAnchorPoints","defaultStateStyles","defaultEdgeStyle","getGraphSize","processMinimap","getGraphId","renderGraph","bindEvents","defaultNodeStyle","stroke","defaultLayout","type","rankdir","nodesepFunc","ranksepFunc","controlPoints","graphs","DagreGraph","props","data","className","style","width","height","_a","nodeType","_b","edgeType","_c","behaviors","_d","nodeSize","_e","nodeLabelCfg","_f","edgeLabelCfg","_g","nodeAnchorPoints","_h","layout","minimapCfg","_j","nodeStyle","_k","edgeStyle","_l","nodeStateStyles","_m","edgeStateStyles","graphRef","onReady","loading","loadingTemplate","errorTemplate","container","useRef","graph","graphId","graphSize","Graph","current","modes","default","defaultNode","size","anchorPoints","labelCfg","defaultEdge","fitView","destroy","createElement","ref"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport G6 from '@antv/g6';\nimport ChartLoading from '../util/createLoading';\nimport { ErrorBoundary } from '../base';\nimport useGraph from '../hooks/useGraph';\nimport { defaultNodeSize, defaultLabelCfg, defaultNodeAnchorPoints, defaultStateStyles, defaultEdgeStyle, } from './contants';\nimport { getGraphSize, processMinimap, getGraphId, renderGraph, bindEvents } from './utils';\nvar defaultNodeStyle = {\n    stroke: '#40a9ff',\n};\nvar defaultLayout = {\n    type: 'dagre',\n    rankdir: 'TB',\n    nodesepFunc: function () { return 0; },\n    ranksepFunc: function () { return 0; },\n    controlPoints: true,\n};\nvar graphs = {};\nvar DagreGraph = function (props) {\n    var data = props.data, className = props.className, style = props.style, width = props.width, height = props.height, _a = props.nodeType, nodeType = _a === void 0 ? 'modelRect' : _a, _b = props.edgeType, edgeType = _b === void 0 ? 'polyline' : _b, _c = props.behaviors, behaviors = _c === void 0 ? ['zoom-canvas', 'drag-canvas'] : _c, _d = props.nodeSize, nodeSize = _d === void 0 ? defaultNodeSize : _d, _e = props.nodeLabelCfg, nodeLabelCfg = _e === void 0 ? defaultLabelCfg : _e, _f = props.edgeLabelCfg, edgeLabelCfg = _f === void 0 ? defaultLabelCfg : _f, _g = props.nodeAnchorPoints, nodeAnchorPoints = _g === void 0 ? defaultNodeAnchorPoints : _g, _h = props.layout, layout = _h === void 0 ? defaultLayout : _h, minimapCfg = props.minimapCfg, _j = props.nodeStyle, nodeStyle = _j === void 0 ? defaultNodeStyle : _j, _k = props.edgeStyle, edgeStyle = _k === void 0 ? defaultEdgeStyle : _k, _l = props.nodeStateStyles, nodeStateStyles = _l === void 0 ? defaultStateStyles : _l, _m = props.edgeStateStyles, edgeStateStyles = _m === void 0 ? defaultStateStyles : _m, graphRef = props.graphRef, onReady = props.onReady, loading = props.loading, loadingTemplate = props.loadingTemplate, errorTemplate = props.errorTemplate;\n    var container = React.useRef(null);\n    var graph = React.useRef(null);\n    var graphId = getGraphId(graph);\n    useGraph(graphs[graphId], props, container);\n    useEffect(function () {\n        var graphSize = getGraphSize(width, height, container);\n        var graph = graphs[graphId];\n        if (!graph) {\n            graph = new G6.Graph({\n                container: container.current,\n                width: graphSize[0],\n                height: graphSize[1],\n                modes: {\n                    default: behaviors,\n                },\n                defaultNode: {\n                    type: nodeType,\n                    size: nodeSize,\n                    style: nodeStyle,\n                    anchorPoints: nodeAnchorPoints,\n                    labelCfg: nodeLabelCfg,\n                },\n                defaultEdge: {\n                    type: edgeType,\n                    style: edgeStyle,\n                    labelCfg: edgeLabelCfg,\n                },\n                nodeStateStyles: nodeStateStyles,\n                edgeStateStyles: edgeStateStyles,\n                layout: layout,\n                fitView: true,\n            });\n            graphs[graphId] = graph;\n        }\n        if (graphRef) {\n            graphRef.current = graph;\n        }\n        processMinimap(minimapCfg, graph);\n        renderGraph(graph, data);\n        if (onReady) {\n            onReady(graph);\n        }\n        bindEvents(graph, props);\n        return function () {\n            if (graphs[graphId]) {\n                graphs[graphId].destroy();\n                delete graphs[graphId];\n            }\n        };\n    }, []);\n    return (React.createElement(ErrorBoundary, { errorTemplate: errorTemplate },\n        loading && React.createElement(ChartLoading, { loadingTemplate: loadingTemplate }),\n        React.createElement(\"div\", { className: className, style: style, ref: container })));\n};\nexport default DagreGraph;\n"]},"metadata":{},"sourceType":"module"}