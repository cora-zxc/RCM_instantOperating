{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport G6 from '@antv/g6';\nimport { deepClone } from '../util/utils';\nvar defaultMinimapCfg = {\n  show: false,\n  size: [150, 100],\n  type: 'keyShape'\n};\nexport var getGraphSize = function (width, height, container) {\n  var CANVAS_WIDTH;\n  var CANVAS_HEIGHT;\n\n  if (container && container.current) {\n    CANVAS_WIDTH = container.current.offsetWidth;\n    CANVAS_HEIGHT = container.current.offsetHeight || 500;\n  }\n\n  if (!width && !CANVAS_WIDTH || !height && !CANVAS_HEIGHT) {\n    console.warn('请为 Graph 指定 width 与 height！否则将使用默认值 500 * 500');\n    return [500, 500];\n  }\n\n  return [width || CANVAS_WIDTH || 500, height || CANVAS_HEIGHT || 500];\n};\nexport var processMinimap = function (cfg, graph) {\n  if (!graph || graph.destroyed) return;\n\n  if (cfg && cfg.show) {\n    var curMminimapCfg = Object.assign(defaultMinimapCfg, cfg);\n    var minimap = new G6.Minimap(__assign({}, curMminimapCfg));\n    graph.addPlugin(minimap);\n    return minimap;\n  }\n\n  return null;\n};\n\nvar uuid = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}; // 同一页面存在多 graph 时需要指定 graphId\n\n\nexport var getGraphId = function (graph) {\n  if (graph.current) {\n    return graph.current;\n  }\n\n  graph.current = \"IndentedTreeGraph-\" + uuid();\n  return graph.current;\n};\nexport var renderGraph = function (graph, data) {\n  var originData = deepClone(data);\n  graph.data(originData);\n  graph.render();\n  graph.fitView();\n}; // 事件绑定，兼容历史数据\n\nexport var bindEvents = function (graph, props, bindNodeClick) {\n  if (bindNodeClick === void 0) {\n    bindNodeClick = true;\n  }\n\n  var handleEdgeClick = props.handleEdgeClick,\n      handleEdgeHover = props.handleEdgeHover,\n      handleEdgeUnHover = props.handleEdgeUnHover,\n      handleNodeClick = props.handleNodeClick,\n      handleNodeHover = props.handleNodeHover,\n      handleNodeUnHover = props.handleNodeUnHover,\n      handleCanvasClick = props.handleCanvasClick;\n  graph.on('edge:mouseenter', function (evt) {\n    var item = evt.item;\n    graph.setItemState(item, 'hover', true);\n    handleEdgeHover === null || handleEdgeHover === void 0 ? void 0 : handleEdgeHover(item, graph);\n  });\n  graph.on('edge:mouseleave', function (evt) {\n    var item = evt.item;\n    graph.setItemState(item, 'hover', false);\n    handleEdgeUnHover === null || handleEdgeUnHover === void 0 ? void 0 : handleEdgeUnHover(item, graph);\n  });\n  graph.on('edge:click', function (evt) {\n    var item = evt.item;\n    handleEdgeClick === null || handleEdgeClick === void 0 ? void 0 : handleEdgeClick(item, graph);\n  });\n  graph.on('edge:touchstart', function (evt) {\n    var item = evt.item;\n    handleEdgeClick === null || handleEdgeClick === void 0 ? void 0 : handleEdgeClick(item, graph);\n  });\n  graph.on('node:mouseenter', function (evt) {\n    var item = evt.item;\n    graph.setItemState(item, 'hover', true);\n    handleNodeHover === null || handleNodeHover === void 0 ? void 0 : handleNodeHover(item, graph);\n  });\n  graph.on('node:mouseleave', function (evt) {\n    var item = evt.item;\n    graph.setItemState(item, 'hover', false);\n    handleNodeUnHover === null || handleNodeUnHover === void 0 ? void 0 : handleNodeUnHover(item, graph);\n  });\n\n  if (bindNodeClick) {\n    graph.on('node:click', function (evt) {\n      var item = evt.item;\n      handleNodeClick === null || handleNodeClick === void 0 ? void 0 : handleNodeClick(item, graph);\n    });\n  }\n\n  graph.on('canvas:click', function () {\n    handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n  });\n  graph.on('canvas:touchstart', function () {\n    handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n  });\n};","map":{"version":3,"sources":["/Users/tim/Documents/RCM_instantOperating/node_modules/@ant-design/charts/es/graph/utils.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","G6","deepClone","defaultMinimapCfg","show","size","type","getGraphSize","width","height","container","CANVAS_WIDTH","CANVAS_HEIGHT","current","offsetWidth","offsetHeight","console","warn","processMinimap","cfg","graph","destroyed","curMminimapCfg","minimap","Minimap","addPlugin","uuid","replace","c","r","Math","random","v","toString","getGraphId","renderGraph","data","originData","render","fitView","bindEvents","props","bindNodeClick","handleEdgeClick","handleEdgeHover","handleEdgeUnHover","handleNodeClick","handleNodeHover","handleNodeUnHover","handleCanvasClick","on","evt","item","setItemState"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport G6 from '@antv/g6';\nimport { deepClone } from '../util/utils';\nvar defaultMinimapCfg = {\n    show: false,\n    size: [150, 100],\n    type: 'keyShape',\n};\nexport var getGraphSize = function (width, height, container) {\n    var CANVAS_WIDTH;\n    var CANVAS_HEIGHT;\n    if (container && container.current) {\n        CANVAS_WIDTH = container.current.offsetWidth;\n        CANVAS_HEIGHT = container.current.offsetHeight || 500;\n    }\n    if ((!width && !CANVAS_WIDTH) || (!height && !CANVAS_HEIGHT)) {\n        console.warn('请为 Graph 指定 width 与 height！否则将使用默认值 500 * 500');\n        return [500, 500];\n    }\n    return [width || CANVAS_WIDTH || 500, height || CANVAS_HEIGHT || 500];\n};\nexport var processMinimap = function (cfg, graph) {\n    if (!graph || graph.destroyed)\n        return;\n    if (cfg && cfg.show) {\n        var curMminimapCfg = Object.assign(defaultMinimapCfg, cfg);\n        var minimap = new G6.Minimap(__assign({}, curMminimapCfg));\n        graph.addPlugin(minimap);\n        return minimap;\n    }\n    return null;\n};\nvar uuid = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\n// 同一页面存在多 graph 时需要指定 graphId\nexport var getGraphId = function (graph) {\n    if (graph.current) {\n        return graph.current;\n    }\n    graph.current = \"IndentedTreeGraph-\" + uuid();\n    return graph.current;\n};\nexport var renderGraph = function (graph, data) {\n    var originData = deepClone(data);\n    graph.data(originData);\n    graph.render();\n    graph.fitView();\n};\n// 事件绑定，兼容历史数据\nexport var bindEvents = function (graph, props, bindNodeClick) {\n    if (bindNodeClick === void 0) { bindNodeClick = true; }\n    var handleEdgeClick = props.handleEdgeClick, handleEdgeHover = props.handleEdgeHover, handleEdgeUnHover = props.handleEdgeUnHover, handleNodeClick = props.handleNodeClick, handleNodeHover = props.handleNodeHover, handleNodeUnHover = props.handleNodeUnHover, handleCanvasClick = props.handleCanvasClick;\n    graph.on('edge:mouseenter', function (evt) {\n        var item = evt.item;\n        graph.setItemState(item, 'hover', true);\n        handleEdgeHover === null || handleEdgeHover === void 0 ? void 0 : handleEdgeHover(item, graph);\n    });\n    graph.on('edge:mouseleave', function (evt) {\n        var item = evt.item;\n        graph.setItemState(item, 'hover', false);\n        handleEdgeUnHover === null || handleEdgeUnHover === void 0 ? void 0 : handleEdgeUnHover(item, graph);\n    });\n    graph.on('edge:click', function (evt) {\n        var item = evt.item;\n        handleEdgeClick === null || handleEdgeClick === void 0 ? void 0 : handleEdgeClick(item, graph);\n    });\n    graph.on('edge:touchstart', function (evt) {\n        var item = evt.item;\n        handleEdgeClick === null || handleEdgeClick === void 0 ? void 0 : handleEdgeClick(item, graph);\n    });\n    graph.on('node:mouseenter', function (evt) {\n        var item = evt.item;\n        graph.setItemState(item, 'hover', true);\n        handleNodeHover === null || handleNodeHover === void 0 ? void 0 : handleNodeHover(item, graph);\n    });\n    graph.on('node:mouseleave', function (evt) {\n        var item = evt.item;\n        graph.setItemState(item, 'hover', false);\n        handleNodeUnHover === null || handleNodeUnHover === void 0 ? void 0 : handleNodeUnHover(item, graph);\n    });\n    if (bindNodeClick) {\n        graph.on('node:click', function (evt) {\n            var item = evt.item;\n            handleNodeClick === null || handleNodeClick === void 0 ? void 0 : handleNodeClick(item, graph);\n        });\n    }\n    graph.on('canvas:click', function () {\n        handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n    });\n    graph.on('canvas:touchstart', function () {\n        handleCanvasClick === null || handleCanvasClick === void 0 ? void 0 : handleCanvasClick(graph);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}