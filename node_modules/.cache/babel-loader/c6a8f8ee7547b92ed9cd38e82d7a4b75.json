{"ast":null,"code":"import { deepClone } from '../util/utils';\nexport var getGraphSize = function (width, height, container) {\n  var CANVAS_WIDTH;\n  var CANVAS_HEIGHT;\n\n  if (container && container.current) {\n    CANVAS_WIDTH = container.current.offsetWidth;\n    CANVAS_HEIGHT = container.current.offsetHeight || 500;\n  }\n\n  if (!width && !CANVAS_WIDTH || !height && !CANVAS_HEIGHT) {\n    console.warn('请为 Graph 指定 width 与 height！否则将使用默认值 500 * 500');\n    return [500, 500];\n  }\n\n  return [width || CANVAS_WIDTH || 500, height || CANVAS_HEIGHT || 500];\n}; // 展开&折叠事件\n\nexport var bindDefaultEvents = function (graph, collapseExpand) {\n  if (collapseExpand) {\n    var onClick_1 = function (e) {\n      var item = e.item;\n\n      if (e.target.get('name') === 'collapse-icon') {\n        graph.updateItem(item, {\n          collapsed: !item.getModel().collapsed\n        });\n        graph.layout();\n      }\n    };\n\n    graph.on('node:click', function (e) {\n      onClick_1(e);\n    });\n    graph.on('node:touchstart', function (e) {\n      onClick_1(e);\n    });\n  }\n}; // 统一处理 text&style\n\nexport var getContentAndStyle = function (cfg) {\n  if (typeof cfg === 'string' || typeof cfg === 'number') {\n    return {\n      text: cfg\n    };\n  }\n\n  var content = cfg.content,\n      style = cfg.style;\n  return {\n    text: content,\n    style: style\n  };\n}; // 统一处理 config，支持回调\n\nexport var getConfig = function (cfg, item) {\n  if (typeof cfg === 'function') {\n    return cfg(item);\n  }\n\n  return cfg || {};\n};\n\nvar uuid = function () {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n        v = c == 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}; // 同一页面存在多 graph 时需要指定 graphId\n\n\nexport var getGraphId = function (graph) {\n  if (graph.current) {\n    return graph.current;\n  }\n\n  graph.current = \"IndentedTreeGraph-\" + uuid();\n  return graph.current;\n};\nexport var renderGraph = function (graph, data) {\n  var originData = deepClone(data);\n  graph.data(originData);\n  graph.render();\n  graph.fitView();\n};","map":{"version":3,"sources":["/Users/tim/Documents/RCM_instantOperating/node_modules/@ant-design/charts/es/graphs/utils.js"],"names":["deepClone","getGraphSize","width","height","container","CANVAS_WIDTH","CANVAS_HEIGHT","current","offsetWidth","offsetHeight","console","warn","bindDefaultEvents","graph","collapseExpand","onClick_1","e","item","target","get","updateItem","collapsed","getModel","layout","on","getContentAndStyle","cfg","text","content","style","getConfig","uuid","replace","c","r","Math","random","v","toString","getGraphId","renderGraph","data","originData","render","fitView"],"mappings":"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","sourcesContent":["import { deepClone } from '../util/utils';\nexport var getGraphSize = function (width, height, container) {\n    var CANVAS_WIDTH;\n    var CANVAS_HEIGHT;\n    if (container && container.current) {\n        CANVAS_WIDTH = container.current.offsetWidth;\n        CANVAS_HEIGHT = container.current.offsetHeight || 500;\n    }\n    if ((!width && !CANVAS_WIDTH) || (!height && !CANVAS_HEIGHT)) {\n        console.warn('请为 Graph 指定 width 与 height！否则将使用默认值 500 * 500');\n        return [500, 500];\n    }\n    return [width || CANVAS_WIDTH || 500, height || CANVAS_HEIGHT || 500];\n};\n// 展开&折叠事件\nexport var bindDefaultEvents = function (graph, collapseExpand) {\n    if (collapseExpand) {\n        var onClick_1 = function (e) {\n            var item = e.item;\n            if (e.target.get('name') === 'collapse-icon') {\n                graph.updateItem(item, {\n                    collapsed: !item.getModel().collapsed,\n                });\n                graph.layout();\n            }\n        };\n        graph.on('node:click', function (e) {\n            onClick_1(e);\n        });\n        graph.on('node:touchstart', function (e) {\n            onClick_1(e);\n        });\n    }\n};\n// 统一处理 text&style\nexport var getContentAndStyle = function (cfg) {\n    if (typeof cfg === 'string' || typeof cfg === 'number') {\n        return {\n            text: cfg,\n        };\n    }\n    var content = cfg.content, style = cfg.style;\n    return {\n        text: content,\n        style: style,\n    };\n};\n// 统一处理 config，支持回调\nexport var getConfig = function (cfg, item) {\n    if (typeof cfg === 'function') {\n        return cfg(item);\n    }\n    return cfg || {};\n};\nvar uuid = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\n// 同一页面存在多 graph 时需要指定 graphId\nexport var getGraphId = function (graph) {\n    if (graph.current) {\n        return graph.current;\n    }\n    graph.current = \"IndentedTreeGraph-\" + uuid();\n    return graph.current;\n};\nexport var renderGraph = function (graph, data) {\n    var originData = deepClone(data);\n    graph.data(originData);\n    graph.render();\n    graph.fitView();\n};\n"]},"metadata":{},"sourceType":"module"}