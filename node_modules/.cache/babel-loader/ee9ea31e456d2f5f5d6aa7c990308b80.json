{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Plot } from '../../core/plot';\nimport { adaptor } from './adaptor';\nimport { transformData, enableInteraction, resetDrillDown } from './utils';\nimport './interactions/treemap-drill-down';\nimport '../scatter/interaction';\n\nvar Treemap =\n/** @class */\nfunction (_super) {\n  __extends(Treemap, _super);\n\n  function Treemap() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** 图表类型 */\n\n\n    _this.type = 'treemap';\n    return _this;\n  }\n  /**\n   * changeData\n   */\n\n\n  Treemap.prototype.changeData = function (data) {\n    var _a = this.options,\n        colorField = _a.colorField,\n        interactions = _a.interactions,\n        hierarchyConfig = _a.hierarchyConfig;\n    this.updateOption({\n      data: data\n    });\n    var transData = transformData({\n      data: data,\n      colorField: colorField,\n      enableDrillDown: enableInteraction(interactions, 'treemap-drill-down'),\n      hierarchyConfig: hierarchyConfig\n    });\n    this.chart.changeData(transData);\n    resetDrillDown(this.chart);\n  };\n\n  Treemap.prototype.getSchemaAdaptor = function () {\n    return adaptor;\n  };\n\n  return Treemap;\n}(Plot);\n\nexport { Treemap };","map":{"version":3,"sources":["../../../src/plots/treemap/index.ts"],"names":[],"mappings":";AAAA,SAAS,IAAT,QAAqB,iBAArB;AAGA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,aAAT,EAAwB,iBAAxB,EAA2C,cAA3C,QAAiE,SAAjE;AACA,OAAO,mCAAP;AACA,OAAO,wBAAP;;AAIA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,OAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AACE;;;AACO,IAAA,KAAA,CAAA,IAAA,GAAe,SAAf;;AAsBR;AApBC;;AAEG;;;AACI,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,IAAlB,EAAsB;AACd,QAAA,EAAA,GAAgD,KAAK,OAArD;AAAA,QAAE,UAAU,GAAA,EAAA,CAAA,UAAZ;AAAA,QAAc,YAAY,GAAA,EAAA,CAAA,YAA1B;AAAA,QAA4B,eAAe,GAAA,EAAA,CAAA,eAA3C;AACN,SAAK,YAAL,CAAkB;AAAE,MAAA,IAAI,EAAA;AAAN,KAAlB;AACA,QAAM,SAAS,GAAG,aAAa,CAAC;AAC9B,MAAA,IAAI,EAAA,IAD0B;AAE9B,MAAA,UAAU,EAAA,UAFoB;AAG9B,MAAA,eAAe,EAAE,iBAAiB,CAAC,YAAD,EAAe,oBAAf,CAHJ;AAI9B,MAAA,eAAe,EAAA;AAJe,KAAD,CAA/B;AAMA,SAAK,KAAL,CAAW,UAAX,CAAsB,SAAtB;AAEA,IAAA,cAAc,CAAC,KAAK,KAAN,CAAd;AACD,GAZM;;AAcG,EAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,YAAA;AACE,WAAO,OAAP;AACD,GAFS;;AAGZ,SAAA,OAAA;AAAC,CAxBD,CAA6B,IAA7B,CAAA","sourcesContent":["import { Plot } from '../../core/plot';\nimport { Adaptor } from '../../core/adaptor';\nimport { TreemapOptions } from './types';\nimport { adaptor } from './adaptor';\nimport { transformData, enableInteraction, resetDrillDown } from './utils';\nimport './interactions/treemap-drill-down';\nimport '../scatter/interaction';\n\nexport type { TreemapOptions };\n\nexport class Treemap extends Plot<TreemapOptions> {\n  /** 图表类型 */\n  public type: string = 'treemap';\n\n  /**\n   * changeData\n   */\n  public changeData(data) {\n    const { colorField, interactions, hierarchyConfig } = this.options;\n    this.updateOption({ data });\n    const transData = transformData({\n      data,\n      colorField,\n      enableDrillDown: enableInteraction(interactions, 'treemap-drill-down'),\n      hierarchyConfig,\n    });\n    this.chart.changeData(transData);\n\n    resetDrillDown(this.chart);\n  }\n\n  protected getSchemaAdaptor(): Adaptor<TreemapOptions> {\n    return adaptor;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}