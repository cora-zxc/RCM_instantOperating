{"ast":null,"code":"import { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport { transformData, findInteraction, enableInteraction, getFommatInteractions, getAdjustAppendPadding } from './utils';\n/**\n * 获取默认 option\n * @param params\n */\n\nfunction defaultOptions(params) {\n  var options = params.options;\n  var colorField = options.colorField;\n  return deepAssign({\n    options: {\n      // 默认按照 name 字段对颜色进行分类\n      colorField: 'name',\n      rectStyle: {\n        lineWidth: 1,\n        stroke: '#fff'\n      },\n      hierarchyConfig: {\n        tile: 'treemapSquarify'\n      },\n      label: {\n        fields: ['name'],\n        layout: {\n          type: 'limit-in-shape'\n        }\n      },\n      tooltip: {\n        showMarkers: false,\n        showTitle: false,\n        fields: ['name', 'value', colorField, 'path'],\n        formatter: function (data) {\n          return {\n            name: data.name,\n            value: data.value\n          };\n        }\n      }\n    }\n  }, params);\n}\n/**\n * 字段\n * @param params\n */\n\n\nfunction geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var color = options.color,\n      colorField = options.colorField,\n      rectStyle = options.rectStyle,\n      hierarchyConfig = options.hierarchyConfig;\n  var data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableInteraction(options.interactions, 'treemap-drill-down'),\n    hierarchyConfig: hierarchyConfig\n  });\n  chart.data(data); // geometry\n\n  basePolygon(deepAssign({}, params, {\n    options: {\n      xField: 'x',\n      yField: 'y',\n      seriesField: colorField,\n      rawFields: ['value'],\n      polygon: {\n        color: color,\n        style: rectStyle\n      }\n    }\n  })); // 做一个反转，这样配合排序，可以将最大值放到左上角，最小值放到右下角\n\n  chart.coordinate().reflect('y');\n  return params;\n}\n/**\n * 坐标轴\n * @param params\n */\n\n\nfunction axis(params) {\n  var chart = params.chart;\n  chart.axis(false);\n  return params;\n}\n/**\n * Interaction 配置\n * @param params\n */\n\n\nexport function interaction(params) {\n  var chart = params.chart,\n      options = params.options;\n  var interactions = options.interactions,\n      hierarchyConfig = options.hierarchyConfig;\n  commonInteraction({\n    chart: chart,\n    options: {\n      interactions: getFommatInteractions(interactions, hierarchyConfig)\n    }\n  }); // 适配 view-zoom\n\n  var viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // 开启缩放 interaction 后，则阻止默认滚动事件，避免整个窗口的滚动\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', function (ev) {\n        ev.preventDefault();\n      });\n    } else {\n      // 手动关闭后，清除。仅对声明 viewZoomInteraction 的清除。\n      chart.getCanvas().off('mousewheel');\n    }\n  } // 适应下钻交互面包屑\n\n\n  var enableDrillInteraction = enableInteraction(interactions, 'treemap-drill-down');\n\n  if (enableDrillInteraction) {\n    // 为面包屑在底部留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding);\n  }\n\n  return params;\n}\n/**\n * 矩形树图\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  return flow(defaultOptions, geometry, axis, theme, legend, tooltip, interaction, animation, annotation())(params);\n}","map":{"version":3,"sources":["../../../src/plots/treemap/adaptor.ts"],"names":[],"mappings":"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","sourcesContent":["import { polygon as basePolygon } from '../../adaptor/geometries/polygon';\nimport { Params } from '../../core/adaptor';\nimport { interaction as commonInteraction, animation, theme, legend, annotation, tooltip } from '../../adaptor/common';\nimport { flow, deepAssign } from '../../utils';\nimport {\n  transformData,\n  findInteraction,\n  enableInteraction,\n  getFommatInteractions,\n  getAdjustAppendPadding,\n} from './utils';\nimport { TreemapOptions } from './types';\n\n/**\n * 获取默认 option\n * @param params\n */\nfunction defaultOptions(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { options } = params;\n  const { colorField } = options;\n\n  return deepAssign(\n    {\n      options: {\n        // 默认按照 name 字段对颜色进行分类\n        colorField: 'name',\n        rectStyle: {\n          lineWidth: 1,\n          stroke: '#fff',\n        },\n        hierarchyConfig: {\n          tile: 'treemapSquarify',\n        },\n        label: {\n          fields: ['name'],\n          layout: {\n            type: 'limit-in-shape',\n          },\n        },\n        tooltip: {\n          showMarkers: false,\n          showTitle: false,\n          fields: ['name', 'value', colorField, 'path'],\n          formatter: (data) => {\n            return {\n              name: data.name,\n              value: data.value,\n            };\n          },\n        },\n      },\n    },\n    params\n  );\n}\n\n/**\n * 字段\n * @param params\n */\nfunction geometry(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { color, colorField, rectStyle, hierarchyConfig } = options;\n\n  const data = transformData({\n    data: options.data,\n    colorField: options.colorField,\n    enableDrillDown: enableInteraction(options.interactions, 'treemap-drill-down'),\n    hierarchyConfig,\n  });\n\n  chart.data(data);\n\n  // geometry\n  basePolygon(\n    deepAssign({}, params, {\n      options: {\n        xField: 'x',\n        yField: 'y',\n        seriesField: colorField,\n        rawFields: ['value'],\n        polygon: {\n          color,\n          style: rectStyle,\n        },\n      },\n    })\n  );\n\n  // 做一个反转，这样配合排序，可以将最大值放到左上角，最小值放到右下角\n  chart.coordinate().reflect('y');\n\n  return params;\n}\n\n/**\n * 坐标轴\n * @param params\n */\nfunction axis(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart } = params;\n  chart.axis(false);\n  return params;\n}\n\n/**\n * Interaction 配置\n * @param params\n */\nexport function interaction(params: Params<TreemapOptions>): Params<TreemapOptions> {\n  const { chart, options } = params;\n  const { interactions, hierarchyConfig } = options;\n\n  commonInteraction({\n    chart,\n    options: {\n      interactions: getFommatInteractions(interactions, hierarchyConfig),\n    },\n  });\n\n  // 适配 view-zoom\n  const viewZoomInteraction = findInteraction(interactions, 'view-zoom');\n\n  if (viewZoomInteraction) {\n    // 开启缩放 interaction 后，则阻止默认滚动事件，避免整个窗口的滚动\n    if (viewZoomInteraction.enable !== false) {\n      chart.getCanvas().on('mousewheel', (ev) => {\n        ev.preventDefault();\n      });\n    } else {\n      // 手动关闭后，清除。仅对声明 viewZoomInteraction 的清除。\n      chart.getCanvas().off('mousewheel');\n    }\n  }\n\n  // 适应下钻交互面包屑\n  const enableDrillInteraction = enableInteraction(interactions, 'treemap-drill-down');\n  if (enableDrillInteraction) {\n    // 为面包屑在底部留出 25px 的空间\n    chart.appendPadding = getAdjustAppendPadding(chart.appendPadding);\n  }\n  return params;\n}\n\n/**\n * 矩形树图\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<TreemapOptions>) {\n  return flow(defaultOptions, geometry, axis, theme, legend, tooltip, interaction, animation, annotation())(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}