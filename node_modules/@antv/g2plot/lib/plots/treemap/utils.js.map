{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/plots/treemap/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArray } from '@antv/util';\nimport { Types, View } from '@antv/g2';\nimport { normalPadding } from '../../utils/padding';\nimport { Interaction } from '../../types/interaction';\nimport { treemap } from '../../utils/hierarchy/treemap';\nimport { deepAssign } from '../../utils';\nimport { TreemapOptions } from './types';\n\nexport function findInteraction(\n  interactions: TreemapOptions['interactions'],\n  interactionType: string\n): undefined | Interaction {\n  if (!isArray(interactions)) return undefined;\n  return interactions.find((i) => i.type === interactionType);\n}\n\nexport function enableInteraction(interactions: TreemapOptions['interactions'], interactionType: string): boolean {\n  const interaction = findInteraction(interactions, interactionType);\n  return interaction && interaction.enable !== false;\n}\n\nexport function resetDrillDown(chart: View) {\n  const drillDownInteraction = chart.interactions['treemap-drill-down'];\n\n  if (!drillDownInteraction) return;\n\n  // @ts-ignore\n  const drillDownAction = drillDownInteraction.context.actions.find((i) => i.name === 'treemap-drill-down-action');\n\n  drillDownAction.reset();\n}\n\nexport function getFommatInteractions(\n  interactions: TreemapOptions['interactions'],\n  hierarchyConfig: TreemapOptions['hierarchyConfig']\n): TreemapOptions['interactions'] {\n  const drillDownInteraction = findInteraction(interactions, 'treemap-drill-down');\n  if (drillDownInteraction) {\n    return interactions.map((i) => {\n      if (i.type === 'treemap-drill-down') {\n        return deepAssign({}, i, {\n          cfg: {\n            hierarchyConfig,\n          },\n        });\n      }\n      return i;\n    });\n  }\n  return interactions;\n}\n\ninterface TransformDataOptions {\n  data: TreemapOptions['data'];\n  colorField: TreemapOptions['colorField'];\n  enableDrillDown: boolean;\n  hierarchyConfig: TreemapOptions['hierarchyConfig'];\n}\n\nexport function transformData(options: TransformDataOptions) {\n  const { data, colorField, enableDrillDown, hierarchyConfig } = options;\n\n  const nodes = treemap(data, {\n    ...hierarchyConfig,\n    // @ts-ignore\n    type: 'hierarchy.treemap',\n    field: 'value',\n    as: ['x', 'y'],\n  });\n\n  const result = [];\n  nodes.forEach((node) => {\n    if (node.depth === 0) {\n      return null;\n    }\n\n    // 开启下钻，仅加载 depth === 1 的数据\n    if (enableDrillDown && node.depth !== 1) {\n      return null;\n    }\n\n    // 不开启下钻，加载所有叶子节点\n    if (!enableDrillDown && node.children) {\n      return null;\n    }\n\n    // path 信息仅挑选必要祖先元素属性，因为在有些属性是不必要(x, y), 或是不准确的(下钻时的 depth)，不对外透出\n    const curPath = node.ancestors().map((n) => ({\n      data: n.data,\n      height: n.height,\n      value: n.value,\n    }));\n    // 在下钻树图中，每次绘制的是当前层级信息，将父元素的层级信息（data.path) 做一层拼接。\n    const path = enableDrillDown && isArray(data.path) ? curPath.concat(data.path.slice(1)) : curPath;\n\n    const eachNode = Object.assign({}, node.data, {\n      x: node.x,\n      y: node.y,\n      depth: node.depth,\n      value: node.value,\n      path,\n    });\n    if (!node.data[colorField] && node.parent) {\n      const ancestorNode = node.ancestors().find((n) => n.data[colorField]);\n      eachNode[colorField] = ancestorNode?.data[colorField];\n    } else {\n      eachNode[colorField] = node.data[colorField];\n    }\n\n    result.push(eachNode);\n  });\n  return result;\n}\n\nexport function getAdjustAppendPadding(padding: Types.ViewAppendPadding) {\n  const currentAppendPadding = normalPadding(padding);\n  const BOTTOM = 25;\n  return [currentAppendPadding[0], currentAppendPadding[1], currentAppendPadding[2] + BOTTOM, currentAppendPadding[3]];\n}\n"]}