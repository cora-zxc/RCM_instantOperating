import { deepAssign } from '../../utils';
import { adaptor as lineAdaptor } from '../line/adaptor';
import { adaptor as pieAdaptor } from '../pie/adaptor';
import { adaptor as columnAdaptor } from '../column/adaptor';
import { adaptor as barAdaptor } from '../bar/adaptor';
import { adaptor as areaAdaptor } from '../area/adaptor';
import { adaptor as gaugeAdaptor } from '../gauge/adaptor';
import { adaptor as tinyLineAdaptor } from '../tiny-line/adaptor';
import { adaptor as tinyColumnAdaptor } from '../tiny-column/adaptor';
import { adaptor as tinyAreadaptor } from '../tiny-area/adaptor';
import { adaptor as ringProgressAdaptor } from '../ring-progress/adaptor';
import { adaptor as progressAdaptor } from '../progress/adaptor';
import { Line } from '../line';
import { Pie } from '../pie';
import { Bar } from '../bar';
import { Column } from '../column';
import { Area } from '../area';
import { Gauge } from '../gauge';
import { TinyLine } from '../tiny-line';
import { TinyArea } from '../tiny-area';
import { TinyColumn } from '../tiny-column';
import { RingProgress } from '../ring-progress';
import { Progress } from '../progress';
/**
 * 可在 multi-view 中使用的 plots
 */
var PLOT_ADAPTORS = {
    line: lineAdaptor,
    pie: pieAdaptor,
    column: columnAdaptor,
    bar: barAdaptor,
    area: areaAdaptor,
    gauge: gaugeAdaptor,
    'tiny-line': tinyLineAdaptor,
    'tiny-column': tinyColumnAdaptor,
    'tiny-area': tinyAreadaptor,
    'ring-progress': ringProgressAdaptor,
    progress: progressAdaptor,
};
/**
 * 获取指定 plot 的 class contructor
 * @param {string} plot
 */
var PLOT_CONSTRUCTOR = {
    line: Line,
    pie: Pie,
    column: Column,
    bar: Bar,
    area: Area,
    gauge: Gauge,
    'tiny-line': TinyLine,
    'tiny-column': TinyColumn,
    'tiny-area': TinyArea,
    'ring-progress': RingProgress,
    progress: Progress,
};
/**
 * 执行 plot 的 adaptor, 默认都带上 defaultOptions
 * @param {string} plot
 */
export function execPlotAdaptor(plot, view, options) {
    var cls = PLOT_CONSTRUCTOR[plot];
    if (!cls) {
        console.error("could not find " + plot + " plot");
        return;
    }
    var module = PLOT_ADAPTORS[plot];
    module({ chart: view, options: deepAssign({}, cls.getDefaultOptions(), options) });
}
//# sourceMappingURL=utils.js.map